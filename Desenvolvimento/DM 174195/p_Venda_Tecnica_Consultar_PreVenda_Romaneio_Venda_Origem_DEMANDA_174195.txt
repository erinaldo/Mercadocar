-------------------------------------------------------------------------------
-- <summary>    
--   Verifica a pre venda romaneio de venda origem
-- </summary>
-- <history>
--  [gfpinheiro]  - 23/09/2014 Created
--  [mmukuno]   - 24/03/2016 Modifed
--  Correção no JOIN, incluindo a loja.
--  [mmukuno]   - 08/06/2016 Modifed
--  Alteração na forma de identificar o romaneio de origem da venda
--  [mmukuno]   - 04/08/2016 Modifed
--  Identificar a origem dos romaneios de crédito
--  [fmoraes]   - 30/04/2019 Modifed
--  Eliminada a verificação na tabela Romaneio_Venda_Origem
-- </history>
-------------------------------------------------------------------------------
CREATE PROCEDURE [dbo].p_Venda_Tecnica_Consultar_PreVenda_Romaneio_Venda_Origem_DEMANDA_174195 (
@Lojas_ID                              INT,
@Romaneio_Pre_Venda_CT_ID              INT)
AS
  -------------------------------------------------------------------------------
  --DECLARE @Lojas_ID                    INT
  --DECLARE @Romaneio_Pre_Venda_CT_ID    INT

  --SET @Lojas_ID = 1
  --SET @Romaneio_Pre_Venda_CT_ID        = 987662953
  -------------------------------------------------------------------------------
  SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
  SET NOCOUNT ON


  BEGIN
    DECLARE
      @Romaneio_Venda_CT_ID_Nova       INT,
      @Lojas_ID_Nova                   INT

    -- Identifica o romaneio na tabela nova
    SELECT
      @Romaneio_Venda_CT_ID_Nova = Romaneio_Venda_CT_ID,
      @Lojas_ID_Nova = Lojas_ID
    FROM Romaneio_Venda_CT
    WHERE Romaneio_Pre_Venda_Ct_ID = @Romaneio_Pre_Venda_CT_ID
    AND Lojas_ID = @Lojas_ID

    CREATE TABLE #tmp_Romaneio_Origem (
      Romaneio_CT_ID_Origem            INT,
      Lojas_ID_Origem                  INT)

    -- Identifica os romaneios de origem
    INSERT INTO #tmp_Romaneio_Origem (
    Romaneio_CT_ID_Origem,
    Lojas_ID_Origem)
      SELECT
        Romaneio_CT_ID_Filho           AS Romaneio_CT_ID_Origem,
        Lojas_ID_Filho                 AS Lojas_ID_Origem
      FROM dbo.fun_Retorna_Romaneio_Venda_Origem(@Romaneio_Venda_CT_ID_Nova, @Lojas_ID_Nova)
      WHERE Romaneio_CT_ID_Pai = 0

    -- Verifica se o romaneio de origem foi pago em cartão
    ;
    WITH Romaneio_Origem
    AS (SELECT
      COUNT(romaneio_venda_CT.romaneio_venda_CT_ID)             AS Qtd_Romaneio_Pre_Venda_Ct_ID
    FROM romaneio_venda_CT
    JOIN Romaneio_Venda_Pagamento
      ON romaneio_venda_CT.Lojas_ID = Romaneio_Venda_Pagamento.Lojas_ID
      AND romaneio_venda_CT.Romaneio_Venda_Grupo_ID = Romaneio_Venda_Pagamento.Romaneio_Venda_Grupo_ID
    JOIN vw_Condicao_Pagamento
      ON vw_Condicao_Pagamento.Condicao_Pagamento_ID = Romaneio_Venda_Pagamento.Condicao_Pagamento_ID
      AND vw_Condicao_Pagamento.Loja_ID = Romaneio_Venda_Pagamento.Lojas_ID
      AND ISNULL(Forma_Pagamento_Emissao_Cartao_Credito, 0) = 1
    JOIN #tmp_Romaneio_Origem
      ON romaneio_venda_CT.Romaneio_Venda_CT_ID = #tmp_Romaneio_Origem.Romaneio_CT_ID_Origem
      AND romaneio_venda_CT.Lojas_ID = #tmp_Romaneio_Origem.Lojas_ID_Origem
    UNION ALL
    SELECT
      COUNT(Romaneio_Pre_Venda_CT.Romaneio_Pre_Venda_Ct_ID)     AS Qtd_Romaneio_Pre_Venda_Ct_ID
    FROM Romaneio_Pre_Venda_CT
	JOIN Romaneio_Venda_CT
      ON Romaneio_Pre_Venda_CT.Romaneio_Pre_Venda_Ct_ID = Romaneio_Venda_CT.Romaneio_Pre_Venda_Ct_ID
      AND Romaneio_Pre_Venda_CT.Lojas_ID = Romaneio_Venda_CT.Lojas_ID
    WHERE Romaneio_Pre_Venda_CT.Romaneio_Pre_Venda_Ct_ID = ISNULL(@Romaneio_Pre_Venda_CT_ID, Romaneio_Pre_Venda_CT.Romaneio_Pre_Venda_Ct_ID)
    AND Romaneio_Pre_Venda_CT.Lojas_ID = @Lojas_ID)

    SELECT
      SUM(Qtd_Romaneio_Pre_Venda_Ct_ID)                         AS Qtd_Romaneio_Pre_Venda_Ct_ID
    FROM Romaneio_Origem

    --================================================
    -- DELETA A TABELA TEMPORARIA  
    --================================================
    IF OBJECT_ID('tempdb..#tmp_Romaneio_Origem') IS NOT NULL
    BEGIN
      DROP TABLE #tmp_Romaneio_Origem
    END
  END

  SET NOCOUNT OFF