-- [p_Jobs_Gerar_Dados_Venda_Para_Pecas_Encomenda_Sem_Cadastro]
-- <summary>    
--  Job Local que gera a reserva de estoque para peças recém cadastradas    
-- pela encomenda, que ainda não foi paga. Também gera a movimentação_peca_log    
-- das encomendas pagas e que só depois tiveram sua peça cadastrada pelo    
-- job central de cadastro de peça da encomenda.    
-- </summary>    
-- <history>    
--  [econforti]  - 24/03/2014 Created    
--  [econforti]  - 23/05/2014 Modified    
--   Atualizado objeto_id e tipo de objeto da Romaneio_Venda_IT com     
--  peca_ID e tipo "peça"    
--  [econforti]  - 31/07/2014 Modified    
--   Atualizado o usuário de alteração quando se atualiza a tabela de     
--  itens de encomenda para processado local, por causa do usuário exibido    
--  na auditoria.    
--  [econforti]  - 31/10/2014 Modified    
--   Alterado a data de geração da movimentação para que fique igual a     
--  data de liberação do caixa (estava com a data em que roda o job, então,    
--  se o job parasse por 1 dia as vendas seria geradas com movimentação em    
--  dia diferente da venda).    
--  [wpinheiro]  - 18/02/2015 Modified    
--   Tratamento com IF para só rodar caso tenha alguma peça a ser tratada    
--  [wpinheiro]  - 24/04/2015 Modified    
--   Alterado tratamento do IF pois nao estava rodando pra quando a venda    
--  ja havia sido paga    
--  [efsousa] - 22/10/2018 Modified    
---------------------------
--Propriedades da Encomenda
-----------------------------
--Encomenda Nº 10000164 gerada com sucesso!

--Pré-Venda Nº 10009769 gerada com sucesso!
-----------------------------
--OK   
---------------------------

select top 20 * from sat_venda order by sat_venda_ID desc

    
--DROP TABLE #Temp_Itens_Encomenda_Precisam_Reserva_Estoque    
--DROP TABLE #Temp_Itens_Encomenda_Precisam_Movimentacao_Peca    
    
---VARIÁVEIS DE TESTE----------------------------------------------------------    
DECLARE @Lojas_ID INT = 1
-------------------------------------------------------------------------------    
      
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED      
SET NOCOUNT ON    
    
DECLARE @Data_Atual       DATETIME  = GETDATE(),    
  @Enum_Tipo_Objeto_Encomenda_ID  INT = 509,    
  @Enum_Tipo_Objeto_Peca_ID   INT = 507,    
  @Enum_Tipo_Reserva_Pre_Venda_ID  INT = 563,    
  @Enum_Tipo_Movimentacao_Venda_ID INT = 93,    
  @Enum_Tipo_Romaneio_Troca_ID  INT = 550,    
  @Enum_Tipo_Romaneio_Resta_ID  INT = 797,    
  @Enum_Tipo_Romaneio_Estorno_ID  INT = 648,    
  @Status_Compra_Cancelado_ID   INT = 1609,    
  @Usuario_Sistema_ID     INT = 20    
      
     
--CREATE TABLE #Temp_Itens_Encomenda_Precisam_Reserva_Estoque    
--(    
-- Encomenda_Venda_IT_ID INT   NOT NULL,    
-- Lojas_ID    INT   NOT NULL,    
-- Peca_ID     INT   NOT NULL,    
-- Qtde_Pedida    INT   NOT NULL,    
-- Romaneio_CT_ID   INT   NOT NULL,    
-- Romaneio_Venda_CT_ID INT   NOT NULL,    
-- Data_Pre_Venda   DATETIME NOT NULL    
--)    
    
--CREATE TABLE #Temp_Itens_Encomenda_Precisam_Movimentacao_Peca    
--(    
-- Encomenda_Venda_IT_ID  INT    NOT NULL,    
-- Peca_ID      INT    NOT NULL,    
-- Lojas_ID     INT    NOT NULL,    
-- Romaneio_CT_ID    INT    NOT NULL,    
-- Romaneio_Grupo_ID   INT    NOT NULL,    
-- Romaneio_Venda_CT_ID  INT    NOT NULL,    
-- Item_Qtde     INT    NOT NULL,    
-- Item_Preco_Pago    DECIMAL(18, 2) NOT NULL,    
-- Item_Custo_Reposicao  DECIMAL(18, 2) NOT NULL,    
-- Item_Valor_Desconto   DECIMAL(18, 2) NOT NULL,    
-- Data_Liberacao_Venda  DATETIME  NOT NULL    
--)    
    
  SELECT    
	Encomenda_Venda_CT.*
   --COUNT(*)    
  FROM    
   Encomenda_Venda_IT    
  JOIN Encomenda_Venda_CT ON    
   Encomenda_Venda_IT.Encomenda_Venda_CT_ID = Encomenda_Venda_CT.Encomenda_Venda_CT_ID    
  AND    
   Encomenda_Venda_IT.Lojas_ID = Encomenda_Venda_CT.Lojas_ID    
  WHERE    
   Encomenda_Venda_IT.Lojas_ID = @Lojas_ID    
  AND    
   Encomenda_Venda_IT_Rotina_Movimentacao_Peca_Local_Processada = 0    
  AND    
   Encomenda_Venda_IT.Encomenda_Venda_IT_Rotina_Cadastro_Central_Processada = 1    
  AND    
   ISNULL(Encomenda_Venda_IT.Peca_ID, 0) != 0    
  AND    
   Encomenda_Venda_IT_Peca_Sem_Cadastro = 1    
  AND    
   Encomenda_Venda_CT.Enum_Status_Compra_ID NOT IN (@Status_Compra_Cancelado_ID)  
   AND
	Encomenda_Venda_CT.Encomenda_Venda_CT_ID =   10000164
  --AND    
  -- Encomenda_Venda_CT.Encomenda_Venda_CT_Data_Geracao > GETDATE() - 7   
       
-------====Só roda se tiver alguma peça pendente de processamento====------    
IF (    
  SELECT    
   COUNT(*)    
  FROM    
   Encomenda_Venda_IT    
  JOIN Encomenda_Venda_CT ON    
   Encomenda_Venda_IT.Encomenda_Venda_CT_ID = Encomenda_Venda_CT.Encomenda_Venda_CT_ID    
  AND    
   Encomenda_Venda_IT.Lojas_ID = Encomenda_Venda_CT.Lojas_ID    
  WHERE    
   Encomenda_Venda_IT.Lojas_ID = @Lojas_ID    
  AND    
   Encomenda_Venda_IT_Rotina_Movimentacao_Peca_Local_Processada = 0    
  AND    
   Encomenda_Venda_IT.Encomenda_Venda_IT_Rotina_Cadastro_Central_Processada = 1    
  AND    
   ISNULL(Encomenda_Venda_IT.Peca_ID, 0) != 0    
  AND    
   Encomenda_Venda_IT_Peca_Sem_Cadastro = 1    
  AND    
   Encomenda_Venda_CT.Enum_Status_Compra_ID NOT IN (@Status_Compra_Cancelado_ID)    
  AND    
   Encomenda_Venda_CT.Encomenda_Venda_CT_Data_Geracao > GETDATE() - 7    
 ) > 0    
BEGIN     
    
BEGIN TRY    
    
 CREATE INDEX     
   [IX_Temp_Encomenda_Reserva] ON [dbo].[#Temp_Itens_Encomenda_Precisam_Reserva_Estoque]([Encomenda_Venda_IT_ID], [Lojas_ID])    
    
 CREATE INDEX     
   [IX_Temp_Encomenda_Movimentacao] ON [dbo].[#Temp_Itens_Encomenda_Precisam_Movimentacao_Peca]([Encomenda_Venda_IT_ID], [Lojas_ID])    
    
 ---- GERA A RESERVA DE ESTOQUE DE PEÇAS RECÉM CADASTRADAS PELO JOB CENTRAL DA ENCOMENDA CASO O CLIENTE AINDA NÃO TENHA PAGO A PRE-VENDA DAQUELA ENCOMENDA ----    
 ---- ISSO EVITA QUE AQUELA PEÇA POSSA SER VENDIDA PARA OUTRO CLIENTE ----     
 INSERT INTO #Temp_Itens_Encomenda_Precisam_Reserva_Estoque(    
  Encomenda_Venda_IT_ID,    
  Lojas_ID,    
  Peca_ID,    
  Qtde_Pedida,    
  Romaneio_CT_ID,    
  Romaneio_Venda_CT_ID,    
  Data_Pre_Venda    
 )    
 SELECT    
  Encomenda_Venda_IT.Encomenda_Venda_IT_ID,    
  Encomenda_Venda_IT.Lojas_ID,    
  Encomenda_Venda_IT.Peca_ID,    
  Romaneio_Pre_Venda_IT_Qtde,    
  Romaneio_Pre_Venda_IT.Romaneio_Pre_Venda_CT_ID,    
  Encomenda_Venda_CT.Romaneio_Venda_CT_ID,    
  Encomenda_Venda_CT_Data_Impressao_Romaneio_Venda    
 FROM    
  Encomenda_Venda_IT    
 JOIN Romaneio_Pre_Venda_IT ON    
  Encomenda_Venda_IT.Encomenda_Venda_IT_ID = Romaneio_Pre_Venda_IT.Objeto_ID    
 AND    
  Encomenda_Venda_IT.Lojas_ID = Romaneio_Pre_Venda_IT.Lojas_ID    
 JOIN Encomenda_Venda_CT ON    
  Encomenda_Venda_IT.Encomenda_Venda_CT_ID = Encomenda_Venda_CT.Encomenda_Venda_CT_ID    
 AND    
  Encomenda_Venda_IT.Lojas_ID = Encomenda_Venda_CT.Lojas_ID    
 WHERE    
  Encomenda_Venda_IT.Lojas_ID = @Lojas_ID    
 AND    
  Romaneio_Pre_Venda_IT.Enum_Objeto_Tipo_ID = @Enum_Tipo_Objeto_Encomenda_ID    
 AND    
  Encomenda_Venda_IT_Rotina_Movimentacao_Peca_Local_Processada = 0    
 AND    
  Encomenda_Venda_IT.Encomenda_Venda_IT_Rotina_Cadastro_Central_Processada = 1    
 AND    
  ISNULL(Encomenda_Venda_IT.Peca_ID, 0) != 0    
 AND    
  Encomenda_Venda_IT_Peca_Sem_Cadastro = 1    
 AND    
  Encomenda_Venda_CT.Encomenda_Venda_CT_Data_Geracao > GETDATE() - 7    
    
     
 BEGIN TRAN --==Abre transação==--    
    
 INSERT INTO Estoque_Reserva(    
  Lojas_ID,    
  Enum_Tipo_Reserva_ID,    
  Objeto_ID,    
  Enum_Objeto_Tipo_ID,    
  Estoque_Reserva_Origem_ID,    
  Estoque_Reserva_Data,    
  Estoque_Reserva_Qtde    
 )    
 SELECT    
  Lojas_ID,    
  @Enum_Tipo_Reserva_Pre_Venda_ID,    
  Peca_ID,    
  @Enum_Tipo_Objeto_Peca_ID,    
  Romaneio_CT_ID,    
  Data_Pre_Venda,    
  Qtde_Pedida    
 FROM    
  #Temp_Itens_Encomenda_Precisam_Reserva_Estoque    
      
 ---- ATUALIZA O ITEM DA PRE-VENDA COM A PECA_ID RECÉM CADASTRADA, SUBSTITUINDO O ID DO ITEM DA ENCOMENDA GRAVADO ANTES ----    
 ---- ATUALIZA O TIPO DO ITEM DA PRE-VENDA DE ENCOMENDA PARA PECA ----    
 UPDATE     
  Romaneio_Pre_Venda_IT    
 SET    
  Romaneio_Pre_Venda_IT.Objeto_ID = Peca_ID,    
  Romaneio_Pre_Venda_IT.Enum_Objeto_Tipo_ID = @Enum_Tipo_Objeto_Peca_ID    
 FROM    
  Romaneio_Pre_Venda_IT    
 JOIN #Temp_Itens_Encomenda_Precisam_Reserva_Estoque ON    
  Romaneio_Pre_Venda_IT.Objeto_ID = #Temp_Itens_Encomenda_Precisam_Reserva_Estoque.Encomenda_Venda_IT_ID    
 AND    
  Romaneio_Pre_Venda_IT.Lojas_ID = #Temp_Itens_Encomenda_Precisam_Reserva_Estoque.Lojas_ID    
 AND    
  Romaneio_Pre_Venda_IT.Romaneio_Pre_Venda_Ct_ID = #Temp_Itens_Encomenda_Precisam_Reserva_Estoque.Romaneio_CT_ID    
 WHERE    
  Romaneio_Pre_Venda_IT.Enum_Objeto_Tipo_ID = @Enum_Tipo_Objeto_Encomenda_ID    
    
 UPDATE     
  Romaneio_Venda_IT    
 SET    
  Romaneio_Venda_IT.Objeto_ID = Peca_ID,    
  Romaneio_Venda_IT.Enum_Objeto_Tipo_ID = @Enum_Tipo_Objeto_Peca_ID    
 FROM    
  Romaneio_Venda_IT    
 JOIN #Temp_Itens_Encomenda_Precisam_Reserva_Estoque ON    
  Romaneio_Venda_IT.Objeto_ID = #Temp_Itens_Encomenda_Precisam_Reserva_Estoque.Encomenda_Venda_IT_ID    
 AND    
  Romaneio_Venda_IT.Lojas_ID = #Temp_Itens_Encomenda_Precisam_Reserva_Estoque.Lojas_ID    
 AND    
  Romaneio_Venda_IT.Romaneio_Venda_Ct_ID = #Temp_Itens_Encomenda_Precisam_Reserva_Estoque.Romaneio_Venda_CT_ID    
 WHERE    
  Romaneio_Venda_IT.Enum_Objeto_Tipo_ID = @Enum_Tipo_Objeto_Encomenda_ID    
    
 UPDATE    
  Encomenda_Venda_IT    
 SET    
  Encomenda_Venda_IT_Rotina_Movimentacao_Peca_Local_Processada = 1,    
  Usuario_Ultima_Alteracao_ID = @Usuario_Sistema_ID    
 FROM    
  Encomenda_Venda_IT    
 JOIN #Temp_Itens_Encomenda_Precisam_Reserva_Estoque ON    
  Encomenda_Venda_IT.Encomenda_Venda_IT_ID = #Temp_Itens_Encomenda_Precisam_Reserva_Estoque.Encomenda_Venda_IT_ID    
 AND    
  Encomenda_Venda_IT.Lojas_ID = #Temp_Itens_Encomenda_Precisam_Reserva_Estoque.Lojas_ID    
    
    
    
     
 ---- GERA A MOVIMENTAÇÃO DAS PEÇAS QUE NÃO TINHAM O CADASTRO QUANDO A PRE-VENDA FOI PAGA E QUE AGORA TEM CADASTRO ----    
 INSERT INTO #Temp_Itens_Encomenda_Precisam_Movimentacao_Peca (    
  Encomenda_Venda_IT_ID,    
  Peca_ID,    
  Lojas_ID,    
  Romaneio_CT_ID,    
  Romaneio_Grupo_ID,    
  Romaneio_Venda_CT_ID,    
  Item_Qtde,    
  Item_Preco_Pago,    
  Item_Custo_Reposicao,    
  Item_Valor_Desconto,    
  Data_Liberacao_Venda    
 )    
 SELECT    
  Encomenda_Venda_IT_ID,    
  Encomenda_Venda_IT.Peca_ID,    
  Encomenda_Venda_IT.Lojas_ID,    
  Romaneio_CT.Romaneio_Ct_ID,    
  Romaneio_CT.Romaneio_Grupo_ID,    
  Encomenda_Venda_CT.Romaneio_Venda_CT_ID,    
  ISNULL(Romaneio_It.Romaneio_It_Qtde, 0),    
  ISNULL(Romaneio_It.Romaneio_It_Preco_Pago, 0),    
  ISNULL(Romaneio_It.Romaneio_It_Custo_Reposicao, 0),    
  ISNULL(Romaneio_It.Romaneio_It_Valor_Desconto, 0),    
  Romaneio_Grupo.Romaneio_Grupo_Data_Liberacao    
 FROM    
  Encomenda_Venda_IT    
 JOIN Romaneio_IT ON    
  Encomenda_Venda_IT.Encomenda_Venda_IT_ID = Romaneio_IT.Objeto_ID    
 AND    
  Encomenda_Venda_IT.Lojas_ID = Romaneio_IT.Lojas_ID    
 JOIN Romaneio_CT ON    
  Romaneio_IT.Romaneio_Ct_ID = Romaneio_Ct.Romaneio_Ct_ID    
 AND    
  Romaneio_IT.Lojas_ID = Romaneio_Ct.Lojas_ID     
 JOIN Romaneio_Grupo ON    
  Romaneio_CT.Romaneio_Grupo_ID = Romaneio_Grupo.Romaneio_Grupo_ID    
 AND    
  Romaneio_CT.Lojas_ID = Romaneio_Grupo.Lojas_ID    
 JOIN Encomenda_Venda_CT ON    
  Encomenda_Venda_IT.Encomenda_Venda_CT_ID = Encomenda_Venda_CT.Encomenda_Venda_CT_ID    
 AND    
  Encomenda_Venda_IT.Lojas_ID = Encomenda_Venda_CT.Lojas_ID    
 WHERE    
  Encomenda_Venda_IT.Lojas_ID = @Lojas_ID    
 AND    
  Romaneio_IT.Enum_Objeto_Tipo_ID = @Enum_Tipo_Objeto_Encomenda_ID    
 AND       
  Romaneio_Ct.Enum_Romaneio_Tipo_ID NOT IN (@Enum_Tipo_Romaneio_Troca_ID, @Enum_Tipo_Romaneio_Resta_ID, @Enum_Tipo_Romaneio_Estorno_ID)     
 AND    
  Encomenda_Venda_IT_Rotina_Movimentacao_Peca_Local_Processada = 0    
 AND    
  Encomenda_Venda_IT.Encomenda_Venda_IT_Rotina_Cadastro_Central_Processada = 1    
 AND    
  ISNULL(Encomenda_Venda_IT.Peca_ID, 0) != 0 --Peca já com com cadastro    
 AND    
  Encomenda_Venda_IT_Peca_Sem_Cadastro = 1    
 AND    
  NOT EXISTS (    
   SELECT    
    Peca_ID,    
    Lojas_ID,    
    Enum_Tipo_Movimentacao_ID,    
    Objeto_Origem_ID    
   FROM    
    Movimentacao_Peca_Log    
   WHERE    
    Movimentacao_Peca_Log.Peca_ID = Encomenda_Venda_IT.Peca_ID   
   AND    
    Movimentacao_Peca_Log.Lojas_ID = Romaneio_IT.Lojas_ID    
   AND    
    Movimentacao_Peca_Log.Enum_Tipo_Movimentacao_ID = @Enum_Tipo_Movimentacao_Venda_ID    
   AND    
    Movimentacao_Peca_Log.Objeto_Origem_ID = Romaneio_CT.Romaneio_Grupo_ID    
  )    
    
 ------select * from #Temp_Itens_Encomenda_Precisam_Movimentacao_Peca    
    
 INSERT INTO Movimentacao_Peca_Log(    
  Peca_ID,    
  Lojas_ID,    
  Enum_Tipo_Movimentacao_ID,    
  Objeto_Origem_ID,    
  Movimentacao_Peca_Log_Data_Movimento,    
  Movimentacao_Peca_Log_Quantidade,    
  Movimentacao_Peca_Log_Valor_Peca_Preco,    
  Movimentacao_Peca_Log_Valor_Custo_Reposicao,    
  Movimentacao_Peca_Log_Valor_Desconto,    
  Movimentacao_Peca_Log_Ler    
 )    
 SELECT    
  Peca_ID,    
  Lojas_ID,    
  @Enum_Tipo_Movimentacao_Venda_ID,    
  Romaneio_Grupo_ID,    
  Data_Liberacao_Venda,    
  SUM(Item_Qtde),    
  AVG(Item_Preco_Pago),    
  AVG(Item_Custo_Reposicao),    
  SUM(Item_Valor_Desconto * Item_Qtde),      
  CAST(1 AS BIT) --Job Central irá atualizar para 0 após ler o registro    
 FROM       
  #Temp_Itens_Encomenda_Precisam_Movimentacao_Peca      
 GROUP BY       
  Peca_ID,       
  Lojas_ID,    
  Romaneio_Grupo_ID,    
  Data_Liberacao_Venda    
    
    
 ---- ATUALIZA O ITEM DA VENDA COM A PECA_ID RECÉM CADASTRADA, SUBSTITUINDO O ID DO ITEM DA ENCOMENDA GRAVADO ANTES ----    
 ---- ATUALIZA O TIPO DO ITEM DA VENDA DE ENCOMENDA PARA PECA ----    
 UPDATE     
  Romaneio_IT    
 SET    
  Romaneio_IT.Objeto_ID = Peca_ID,    
  Romaneio_IT.Enum_Objeto_Tipo_ID = @Enum_Tipo_Objeto_Peca_ID    
 FROM    
  Romaneio_IT    
 JOIN #Temp_Itens_Encomenda_Precisam_Movimentacao_Peca ON    
  Romaneio_IT.Objeto_ID = #Temp_Itens_Encomenda_Precisam_Movimentacao_Peca.Encomenda_Venda_IT_ID    
 AND    
  Romaneio_IT.Lojas_ID = #Temp_Itens_Encomenda_Precisam_Movimentacao_Peca.Lojas_ID    
 AND    
  Romaneio_IT.Romaneio_CT_ID = #Temp_Itens_Encomenda_Precisam_Movimentacao_Peca.Romaneio_CT_ID    
 WHERE    
  Romaneio_IT.Enum_Objeto_Tipo_ID = @Enum_Tipo_Objeto_Encomenda_ID    
    
    
 UPDATE     
  Romaneio_Venda_IT    
 SET    
  Romaneio_Venda_IT.Objeto_ID = Peca_ID,    
  Romaneio_Venda_IT.Enum_Objeto_Tipo_ID = @Enum_Tipo_Objeto_Peca_ID    
 FROM    
  Romaneio_Venda_IT    
 JOIN #Temp_Itens_Encomenda_Precisam_Movimentacao_Peca ON    
  Romaneio_Venda_IT.Objeto_ID = #Temp_Itens_Encomenda_Precisam_Movimentacao_Peca.Encomenda_Venda_IT_ID    
 AND    
  Romaneio_Venda_IT.Lojas_ID = #Temp_Itens_Encomenda_Precisam_Movimentacao_Peca.Lojas_ID    
 AND    
  Romaneio_Venda_IT.Romaneio_Venda_CT_ID = #Temp_Itens_Encomenda_Precisam_Movimentacao_Peca.Romaneio_Venda_CT_ID    
 WHERE    
  Romaneio_Venda_IT.Enum_Objeto_Tipo_ID = @Enum_Tipo_Objeto_Encomenda_ID    
    
    
 UPDATE    
  Encomenda_Venda_IT    
 SET    
  Encomenda_Venda_IT_Rotina_Movimentacao_Peca_Local_Processada = 1,    
  Usuario_Ultima_Alteracao_ID = @Usuario_Sistema_ID    
 FROM    
  Encomenda_Venda_IT    
 JOIN #Temp_Itens_Encomenda_Precisam_Movimentacao_Peca ON    
  Encomenda_Venda_IT.Encomenda_Venda_IT_ID = #Temp_Itens_Encomenda_Precisam_Movimentacao_Peca.Encomenda_Venda_IT_ID    
 AND    
  Encomenda_Venda_IT.Lojas_ID = #Temp_Itens_Encomenda_Precisam_Movimentacao_Peca.Lojas_ID    
    
     
 COMMIT    
    
 END TRY    
 BEGIN CATCH    
  EXEC dbo.p_Get_Error_SQL    
  EXEC dbo.p_Gravar_Log_Erro_SQL    
    
  IF @@TRANCOUNT > 0 ROLLBACK    
 END CATCH     
    
END       
    
DROP TABLE #Temp_Itens_Encomenda_Precisam_Reserva_Estoque    
DROP TABLE #Temp_Itens_Encomenda_Precisam_Movimentacao_Peca    
    
SET NOCOUNT OFF    

